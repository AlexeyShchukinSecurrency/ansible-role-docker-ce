---
- name: Reset internal variables for additional packages to be installed
  set_fact:
    _docker_additional_packages_os: []
    _docker_additional_packages_pip: []
    _docker_python_system: false

- name: Do best effort detection and set fact to indicate system Python environment is used
  set_fact:
    _docker_python_system: true
  when: ansible_python.executable | regex_search('^/bin') or ansible_python.executable | regex_search('^/usr/bin')

- name: Determine if pip exists in path
  become: true
  shell: type -p pip
  register: _docker_pip_cmd
  changed_when: false

- name: Set fact to install Python PiP
  set_fact:
    _docker_additional_packages_pip: "{{ _docker_additional_packages_os + docker_pip_package }}"
  when: _docker_pip_cmd.rc != 0

- name: Set facts to install Docker SDK for Python
  set_fact:
    _docker_additional_packages_pip: "{{ _docker_additional_packages_pip + \
      docker_predefined_packages_pip[_docker_os_dist]['sdk'] }}"
  when:
    - docker_sdk

- name: Set facts to install Docker Compose
  set_fact:
    _docker_additional_packages_pip: "{{ _docker_additional_packages_pip + \
      docker_predefined_packages_pip[_docker_os_dist]['compose'] }}"
  when:
    - docker_compose and not docker_compose_no_pip

- name: Set facts to install Docker Stack dependencies ('docker_stack')
  set_fact:
    _docker_additional_packages_pip: "{{ _docker_additional_packages_pip + \
      docker_predefined_packages_pip[_docker_os_dist]['stack'] }}"
  when:
    - docker_stack

- name: Set facts with additional package to be installed
  set_fact:
    _docker_additional_packages_pip: "{{ _docker_additional_packages_pip + docker_additional_packages_pip }}"
    _docker_additional_packages_os: "{{ _docker_additional_packages_os + docker_additional_packages_os }}"

- name: Ensure EPEL release repository is installed
  become: true
  package:
    name: "epel-release"
    state: present
  when:
    - _docker_os_dist == "CentOS"
    - _docker_additional_packages_os | length > 0

- name: Install additional packages (OS package manager)
  become: true
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ _docker_additional_packages_os }}"
  when: _docker_additional_packages_os | length > 0

- name: Upgrade PiP
  become: true
  pip:
    name: pip
    state: forcereinstall
  when: docker_pip_upgrade

- name: Install additional packages (PiP)
  become: true
  pip:
    name: "{{ item }}"
    state: present
    extra_args: --user
  with_items:
    - "{{ _docker_additional_packages_pip }}"
  when: _docker_additional_packages_pip | length > 0
  environment:
    PYTHONWARNINGS: ignore

# Not using github_release:  https://github.com/ansible/ansible/issues/45391
- name: Get latest release of docker-compose
  uri:
    url: https://api.github.com/repos/docker/compose/releases/latest
    body_format: json
  register: _github_docker_compose
  until: _github_docker_compose.status == 200
  retries: 10
  when: 
    - docker_compose

- name: Set common facts related to docker-compose
  set_fact:
    _docker_compose_shasum_url: "https://github.com/docker/compose/releases/download/{{ _github_docker_compose.json.tag_name }}/\
      docker-compose-{{ ansible_system }}-{{ ansible_architecture }}.sha256"
    _docker_compose_url: "https://github.com/docker/compose/releases/download/{{ _github_docker_compose.json.tag_name }}/\
      docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
  when: 
    - docker_compose

- name: Fetch docker-compose SHA265 sum file
  get_url: 
    url: "{{ _docker_compose_shasum_url }}"
    dest: "/tmp/ansible.docker-compose-sha256"
  register: _github_docker_compose_shasum_file
  changed_when: false
  until: _github_docker_compose_shasum_file.status_code == 200
  retries: 10
  when: 
    - docker_compose

- name: Dump SHA256 file contents to variable
  command: cat /tmp/ansible.docker-compose-sha256
  register: _github_docker_compose_shasum
  changed_when: false
  when: 
    - docker_compose

- name: Remove temporary file for SHA256 sum
  file:
    path: "/tmp/ansible.docker-compose-sha256"
    state: absent
  changed_when: false
  when: 
    - docker_compose

- name: Set SHA256 facts related to docker-compose
  set_fact:
    _docker_compose_checksum: "sha256:{{ _github_docker_compose_shasum.stdout | regex_replace('^([0-9a-zA-Z]*)[\\s\\t]+.+', '\\1') }}"
  when: 
    - docker_compose

# Use when moving to Ansible 2.7 as minimum version
# - name: Set SHA256 facts related to docker-compose (Ansible >= 2.7)
#   set_fact:
#     _docker_compose_checksum: "sha256:https://github.com/docker/compose/releases/download/{{ _github_docker_compose.json.tag_name }}/\
#       docker-compose-{{ ansible_system }}-{{ ansible_architecture }}.sha256"
#   when: ansible_version.full is version_compare('2.7', '>=')

# Official installation of docker-compose (Linux): https://docs.docker.com/compose/install/#install-compose
- name: Install docker-compose (Linux)
  become: true
  get_url:
    url: "{{ _docker_compose_url }}"
    checksum: "{{ _docker_compose_checksum }}"
    dest: /usr/local/bin/docker-compose
    mode: 0755
  when: 
    - docker_compose
