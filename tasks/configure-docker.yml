---
- name: Ensure /etc/docker directory exists
  become: true
  file:
    path: /etc/docker
    state: directory
    mode: 0755

- name: Configure Docker daemon (file)
  become: true
  copy:
    src: "{{ docker_daemon_config_file }}"
    dest: /etc/docker/daemon.json
  notify: restart docker
  when: docker_daemon_config_file is defined

- name: Configure Docker daemon (variables)
  become: true
  copy:
    content: "{{ docker_daemon_config | to_nice_json }}"
    dest: /etc/docker/daemon.json
  notify: restart docker
  when: docker_daemon_config_file is not defined and
        docker_daemon_config is defined

- name: Ensure Docker default user namespace is defined in subuid and subgid
  become: true
  lineinfile:
    path: "{{ item }}"
    regexp: '^dockremap'
    line: 'dockremap:500000:65536'
  with_items:
    - /etc/subuid
    - /etc/subgid
  when: (_docker_os_dist == "CentOS" or _docker_os_dist == "RedHat") and
        ((docker_daemon_config is defined and
        docker_daemon_config['userns-remap'] is defined and
        docker_daemon_config['userns-remap'] == 'default') or
        docker_bug_usermod | bool)

- name: Ensure Docker users are added to the docker group
  become: true
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"

- name: Ensure devicemapper prerequisites are fulfilled
  block:
    - name: Ensure lvm2 is installed
      become: true
      package:
        name: lvm2
        state: present
      register: _pkg_result
      until: _pkg_result|succeeded


    - name: Ensure thin-provisioning-tools is installed
      become: true
      package:
        name: thin-provisioning-tools
        state: present
      register: _pkg_result
      until: _pkg_result|succeeded
      when: (_docker_os_dist == "Ubuntu" or (_docker_os_dist == "Debian" and _docker_os_dist_major_version > '7'))
  when:
    - docker_daemon_config['storage-driver'] is defined
    - docker_daemon_config['storage-driver'] == 'devicemapper'


- name: Enable Docker service
  become: true
  service:
    name: docker
    enabled: yes
  notify: restart docker
  register: _docker_service

- name: Trigger start/restart of Docker
  service:
    name: docker
  notify: restart docker
  changed_when: _docker_service.status.SubState != "running"
  when: _docker_service.status is defined and _docker_service.status.SubState is defined
